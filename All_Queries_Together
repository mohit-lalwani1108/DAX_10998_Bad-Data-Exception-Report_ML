-- DAX-12136 Bad Data: Exception Report (July 2025) [Monthly Ticket]
--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--

CREATE TABLE daas.dax_12136_temp_20250728
SELECT DISTINCT

	 oc.company_id
	,oc.primary_domain
	,oc.primary_name
	,oc.street1
	,oc.city
	,oc.state
	,oc.postal_code
	,oc.company_country
	,oc.digits
	,ARRAY_JOIN(ARRAY_SORT(COLLECT_SET(ocn.naics)), '|') AS naics
	,n.industry
	,oc.linkedin_url
	,oc.employee_count
	,oc.revenue
	,oc.company_status
	,ARRAY_JOIN(ARRAY_SORT(COLLECT_SET(ocs.specialties)), '|') AS keywords
	,COUNT(DISTINCT CASE WHEN ptp.person_source = 'research' THEN ptp.person_id ELSE NULL END) AS HV_count
	,COUNT(DISTINCT CASE WHEN ptp.person_source = 'siq' THEN ptp.person_id ELSE NULL END) AS MV_count
	,COUNT(DISTINCT ocn.naics) AS naics_number
	,COUNT(DISTINCT ocs.specialties) AS keywords_number
	,COUNT(DISTINCT CASE WHEN ((REGEXP_LIKE(ptp.title  , '(?i)(^|[^a-z0-9])c ?[-_,.\/&]? ?e ?[-_,.\/&]? ?o([^a-z0-9]|$)') or ptp.title ILIKE '%chief%executive%officer%')) THEN 1 ELSE NULL END) AS ceo_count
	,COUNT(DISTINCT CASE WHEN ptp.title ILIKE '%founder%'  THEN 1 ELSE NULL END) AS founder_count
	,COUNT(DISTINCT CASE WHEN
		REGEXP_LIKE(REGEXP_REPLACE(title, 'Vice.President|V.President|Vice...President|Vice..President|Vice and President|President, Vice|V\. President',''), '(^|[^a-z0-9])President([^a-z0-9]|$)')
		AND title NOT ILIKE '%vice%president%'  THEN 1 ELSE NULL END) AS president_count
	,MAX(CASE WHEN ((REGEXP_LIKE(ptp.title  , '(?i)(^|[^a-z0-9])c ?[-_,.\/&]? ?e ?[-_,.\/&]? ?o([^a-z0-9]|$)') or ptp.title ILIKE '%chief%executive%officer%')) THEN TRUE ELSE FALSE END) AS ceo_presence_flag
--	,TRUE::BOOLEAN AS ceo_presence_flag
	,CASE WHEN ocn.company_id IS NULL THEN TRUE ELSE FALSE END AS naics_presence_flag
--SELECT count(*)
FROM 
	 si_dataops_prod.daas.o_cds oc
LEFT JOIN
	 si_dataops_prod.daas.master_naics_code_desc_05242024 n ON oc.primary_naics_code = n.naics
LEFT JOIN
	 si_dataops_prod.daas.person_top_positions_20250616_fixed_gr ptp ON oc.company_id = ptp.company_id
LEFT JOIN
	 daas.o_cds_naics ocn ON oc.company_id = ocn.company_id
LEFT JOIN 
	 daas.o_cds_specialties ocs ON oc.company_id = ocs.company_id
WHERE oc.company_status IN ('active', 'whitelist') 
GROUP BY ALL
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-1 (ingestion) 

SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status as status, ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) as revenue from daas.dax_12136_temp_20250728 
WHERE ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  > 775000000000 
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-1 (qa)

SELECT * EXCEPT(RN) from
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN
	from daas.dax_12136_temp_20250728
	WHERE ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  > 775000000000  
) where rn = 1
; 

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-2 (ingestion) 

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status, employee_count from daas.dax_12136_temp_20250728 
WHERE employee_count > 2500000 
;

--
SELECT * from si_dataops_prod.daas.dax_12136_temp_20250728 limit 10 ; 
--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-2 (qa)

SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag )
from daas.dax_12136_temp_20250728 
WHERE employee_count > 2500000
; 

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-3 (ingestion) 

SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status as status, employee_count from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN
	from daas.dax_12136_temp_20250728 
	WHERE NULLIF(employee_count,0) <= 20 AND  HV_count > 5 
) AS subquerry where RN = 1 
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-3 (qa) 

SELECT * EXCEPT(RN) FROM
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN
	from daas.dax_12136_temp_20250728 
	WHERE NULLIF(employee_count,0) <= 20 AND  HV_count > 5 
) AS SUBQERRY WHERE RN = 1 
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-4 (ingestion) 

SELECT DISTINCT primary_domain AS domain, company_country AS countryCode, primary_name AS name, company_status as status, employee_count from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) ,
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, digits DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE employee_count >= 100 AND HV_count < 5 AND company_status = 'whitelist' AND company_country = 'US' AND MV_COUNT >= 5 
) as subquerry WHERE rn=1
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-4 (qa)

SELECT * EXCEPT(RN) from
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, digits DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE employee_count >= 100 AND HV_count < 5 AND company_status = 'whitelist' AND company_country = 'US' AND MV_COUNT >= 5 
) as subquerry WHERE rn=1 
;  

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-5 (ingestion) 
 
SELECT DISTINCT primary_domain AS domain, company_country AS countryCode, primary_name AS name, company_status as status, employee_count,ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) as revenue from 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE NULLIF(employee_count,0) <= 500 AND ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  >= 1000000000 
) as subquerry WHERE rn=1 
;  

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-5 (qa) 

SELECT * EXCEPT(RN) from
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN
	from daas.dax_12136_temp_20250728 
	WHERE NULLIF(employee_count,0) <= 500 AND  ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  >= 1000000000 
) as subquerry WHERE rn=1
; 
  
--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-6 (ingestion)
 
SELECT DISTINCT primary_domain, company_country AS countryCode, primary_name AS name, company_status as status, employee_count, ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) as revenue
from
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE employee_count >= 1000 AND  ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) <= 10000000
	AND NOT 
		( 
		  LEFT(NULLIF(naics,''),2) IN ('91', '92', '99') 
		  OR
		  LEFT(NULLIF(naics,''),4) IN ('6112', '6111', '6113', '6114', '6115', '6116')
		  OR LOWER(TRIM(industry)) IN 
		  ( 
			'elementary and secondary schools', 'junior colleges', 'colleges', 'universities, and professional schools', 'business schools and computer and management training', 
			'technical and trade schools' , 'other schools and instruction industries'
		  ) 
	    ) 
) as subquerry WHERE rn=1  
; 

--
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
---- company-6 (qa) 
--
SELECT * EXCEPT(RN) from
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE employee_count >= 1000 AND  ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) <= 10000000
	AND NOT 
		( 
		  LEFT(NULLIF(naics,''),2) IN ('91', '92', '99') 
		  OR
		  LEFT(NULLIF(naics,''),4) IN ('6112', '6111', '6113', '6114', '6115', '6116')
		  OR LOWER(TRIM(industry)) IN 
		  ( 
			'elementary and secondary schools', 'junior colleges', 'colleges', 'universities, and professional schools', 'business schools and computer and management training', 
			'technical and trade schools' , 'other schools and instruction industries'
		  ) 
	    ) 
) as subquerry WHERE rn=1 
; 

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-7  (ingestion) 

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status  from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE LENGTH(NULLIF(primary_name,''))>25 AND NOT REGEXP_LIKE(primary_name, ' ')  
) as subquerry WHERE rn=1 AND LOWER( primary_name ) <> LOWER(SPLIT_PART( primary_domain  , '.',1))
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-7 (qa) 

SELECT DISTINCT * EXCEPT(RN) from 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE LENGTH(NULLIF(primary_name,''))>25 AND NOT REGEXP_LIKE(primary_name, ' ')  
) as subquerry WHERE rn=1 AND LOWER( primary_name ) <> LOWER(SPLIT_PART( primary_domain  , '.',1))
;
 
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-8   (ingestion) 

WITH CTE
(
	SELECT primary_domain , company_country , EXPLODE(SPLIT(naics, '\\|')) AS naics 
	from
	(
		SELECT * FROM daas.dax_12136_temp_20250728
	) as subquerry 
	GROUP BY ALL 
) ,  
CTE2 
(
	SELECT primary_domain as domain , company_country as country, LENGTH(naics) AS length , COUNT(DISTINCT naics) AS counts
	FROM CTE 
	GROUP BY ALL 
	ORDER BY 1,2  
), 
CTE3 AS 
(
	SELECT DISTINCT * FROM CTE2 
	WHERE counts > 6 
),  
summary AS (
  SELECT
    domain,
    country,
    MAX(CASE WHEN length = 2 THEN counts ELSE NULL END) AS count_2,
    MAX(CASE WHEN length = 4 THEN counts ELSE NULL END) AS count_4,
    MAX(CASE WHEN length = 6 THEN counts ELSE NULL END) AS count_6,
    COUNT(DISTINCT CASE WHEN length = 2 THEN 1 END) AS has_2,
    COUNT(DISTINCT CASE WHEN length = 4 THEN 1 END) AS has_4,
    COUNT(DISTINCT CASE WHEN length = 6 THEN 1 END) AS has_6
  FROM CTE3
  GROUP BY domain, country
),
filtered AS (
  SELECT domain, country
  FROM summary
  WHERE
    -- Case: length 6 exists and has highest count
    (has_6 = 1 AND (count_6 > COALESCE(count_2, 0)) AND (count_6 > COALESCE(count_4, 0)))
    OR
    -- Case: only 2 and 4 exist, and 4 > 6 (i.e., 6 not present)
    (has_2 = 1 AND has_4 = 1 AND has_6 = 0 AND count_4 > COALESCE(count_6, 0))
)
SELECT DISTINCT T2.primary_domain , T2.company_country AS countryCode, T2.primary_name as name , T2.company_status as status, T2.naics FROM filtered AS T1 
JOIN daas.dax_12136_temp_20250728 T2
ON T1.domain = T2.primary_domain AND T1.country = T2.company_country 
;  

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-8  (qa)

WITH CTE 
(
	SELECT primary_domain , company_country , EXPLODE(SPLIT(naics, '\\|')) AS naics 
	from
	(
		SELECT * FROM daas.dax_12136_temp_20250728  
	) as subquerry 
	GROUP BY ALL 
) ,  
CTE2 
(
	SELECT primary_domain as domain , company_country as country, LENGTH(naics) AS length , COUNT(DISTINCT naics) AS counts
	FROM CTE 
	GROUP BY ALL 
	ORDER BY 1,2  
), 
CTE3 AS 
(
	SELECT DISTINCT * FROM CTE2 
	WHERE counts > 6 
),  
summary AS (
  SELECT
    domain,
    country,
    MAX(CASE WHEN length = 2 THEN counts ELSE NULL END) AS count_2,
    MAX(CASE WHEN length = 4 THEN counts ELSE NULL END) AS count_4,
    MAX(CASE WHEN length = 6 THEN counts ELSE NULL END) AS count_6,
    COUNT(DISTINCT CASE WHEN length = 2 THEN 1 END) AS has_2,
    COUNT(DISTINCT CASE WHEN length = 4 THEN 1 END) AS has_4,
    COUNT(DISTINCT CASE WHEN length = 6 THEN 1 END) AS has_6
  FROM CTE3
  GROUP BY domain, country
),
filtered AS (
  SELECT domain, country
  FROM summary
  WHERE
    -- Case: length 6 exists and has highest count
    (has_6 = 1 AND (count_6 > COALESCE(count_2, 0)) AND (count_6 > COALESCE(count_4, 0)))
    OR
    -- Case: only 2 and 4 exist, and 4 > 6 (i.e., 6 not present)
    (has_2 = 1 AND has_4 = 1 AND has_6 = 0 AND count_4 > COALESCE(count_6, 0))
)
SELECT DISTINCT T2.* EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag )  FROM filtered AS T1 
JOIN daas.dax_12136_temp_20250728 T2 
ON T1.domain = T2.primary_domain AND T1.country = T2.company_country 
;

-- Company 9 (Ingestion)
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--

SELECT DISTINCT primary_domain AS domain, company_country AS countryCode, primary_name AS name, company_status as status, naics from 
(  
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728  
--	WHERE naics_number = 1 
	WHERE REGEXP_COUNT(TRIM(naics::string), '\\|') < 1
	AND NULLIF(naics,'') IS NOT NULL
	AND NOT
	(
	(LEFT(naics::string, 2) IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=2 ) )
	OR 
	(LEFT(naics::string, 3)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=3 ))
	OR 
	( LEFT(naics::string, 4)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=4 ))
	OR 
	(LEFT(naics::string, 6)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=6 ))
	)
) as subquerry WHERE rn=1 
;  
  
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
  -- company-9   (QA) 

SELECT DISTINCT * EXCEPT(RN) from
(  
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728  
--	WHERE naics_number = 1 
	WHERE REGEXP_COUNT(TRIM(naics::string), '\\|') < 1
	AND NULLIF(naics,'') IS NOT NULL
	AND NOT
	(
	(LEFT(naics::string, 2) IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=2 ) )
	OR 
	(LEFT(naics::string, 3)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=3 ))
	OR 
	( LEFT(naics::string, 4)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=4 ))
	OR 
	(LEFT(naics::string, 6)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=6 ))
	)
) as subquerry WHERE rn=1 
; 

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-10 (ingestion) 

SELECT DISTINCT primary_domain, company_country AS countryCode, primary_name AS name, company_status as status, naics as removeNaics from daas.dax_12136_temp_20250728 where
company_id IN
( 
	SELECT DISTINCT company_id FROM 
	( 
		SELECT company_id , EXPLODE(SPLIT(naics , '\\|')) AS naics 
		FROM daas.dax_12136_temp_20250728 
	) WHERE NULLIF(naics, '') IS NOT NULL AND
	NOT
	(
	(LEFT(naics::string, 2) IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=2 ) )
	OR 
	(LEFT(naics::string, 3)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=3 ))
	OR 
	( LEFT(naics::string, 4)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=4 ))
	OR 
	(LEFT(naics::string, 6)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=6 ))
	) 
)
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-10   (qa) 

SELECT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) from daas.dax_12136_temp_20250728 where
company_id IN
(	
	SELECT DISTINCT company_id FROM 
	( 
		SELECT company_id , EXPLODE(SPLIT(naics , '\\|')) AS naics 
		FROM daas.dax_12136_temp_20250728 
	) WHERE NULLIF(naics, '') IS NOT NULL AND
	NOT
	(
	(LEFT(naics::string, 2) IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=2 ) )
	OR 
	(LEFT(naics::string, 3)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=3 ))
	OR 
	( LEFT(naics::string, 4)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=4 ))
	OR 
	(LEFT(naics::string, 6)  IN (SELECT DISTINCT naics::string from daas.master_naics_code_desc_05242024 WHERE LENGTH(naics::string)=6 ))
	)  
) 
; 
 
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-12 (ingestion) 

SELECT DISTINCT primary_domain, company_country AS countryCode, primary_name AS name, company_status as status, keywords from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE  keywords ILIKE '%,%' AND NULLIF(keywords,'') IS NOT NULL  --REGEXP_LIKE(keywords, '\\,' )  limit 100 
) as subquerry WHERE rn=1 
; 
  
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-12   (qa)

SELECT * EXCEPT(RN) from
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN
	from daas.dax_12136_temp_20250728 
	WHERE  keywords ILIKE '%,%' AND NULLIF(keywords,'') IS NOT NULL    
) as subquerry WHERE rn=1 
;
 
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-13    (QA) 

WITH CTE AS
(
	SELECT *  
	FROM
	(
		SELECT DISTINCT T2.company_id, T2.primary_domain, T2.primary_name, t2.company_country ,T2.company_status, T1.*
		FROM daas.t0export_20250703 T1 
		JOIN daas.dax_12136_temp_20250728 T2 
		ON t1.`domain` = t2.primary_domain and COALESCE(t1.primaryCountry,t1.personalCountry,'US') = T2.company_country 
		WHERE 
		REGEXP_LIKE(LOWER(TRIM(T1.title)), '^c[ .\\-/\\_]?e[ .\\-/\\_]?o$') 
		OR
		LOWER(TRIM(T1.title)) = 'chief executive officer' 
		ORDER BY T2.primary_domain 
	) AS SUBQUERRY
)
, cte2 as
(
	SELECT *, count(*) over(partition by primary_domain) as cn from 
	( 
		SELECT DISTINCT t1.*  FROM CTE t1 
		join daas.dax_12136_temp_20250728 t2 on t1.company_id = t2.company_id 
		order by primary_domain 
	) 
) SELECT DISTINCT company_id, primary_domain, primary_name, company_country, company_status, contactId, firstName, lastName, email, personalMobile, workPhones, domain, primarycountry, companyname, title, lvl, dpt,personalCity, personalState, personalZipCode, personalCountry,linkedinLocation , linkedinUrl, alternateLinkedinUrl from cte2 where cn > 1
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-14   (QA) 

WITH CTE as
(
	SELECT *
	FROM 
	(
		SELECT DISTINCT T2.company_id, T2.primary_domain, T2.primary_name, t2.company_country ,T2.company_status, T1.*
		FROM daas.t0export_20250703 T1
		JOIN daas.dax_12136_temp_20250728 T2 
		ON t1.`domain` = t2.primary_domain and COALESCE(t1.primaryCountry,t1.personalCountry,'US') = T2.company_country
		WHERE 
		REGEXP_LIKE(LOWER(TRIM(T1.title)), '^founder$') 
		ORDER BY T2.primary_domain 
	) AS SUBQUERRY
)
, cte2 as  
( 
	SELECT *, count(*) over(partition by primary_domain) as cn from 
	( 
		SELECT DISTINCT t1.*  FROM CTE t1 
		join daas.dax_12136_temp_20250728 t2 on t1.company_id = t2.company_id 
		order by primary_domain 
	) 
) SELECT DISTINCT company_id, primary_domain, primary_name, company_country, company_status, contactId, firstName, lastName, email, personalMobile, workPhones, domain, primarycountry, companyname, title, lvl, dpt,personalCity, personalState, personalZipCode, personalCountry,linkedinLocation , linkedinUrl, alternateLinkedinUrl from cte2 where cn > 1
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-15  (QA) 

WITH CTE as 
(
	SELECT * 
	FROM 
	(
		SELECT DISTINCT T2.company_id, T2.primary_domain, T2.primary_name, t2.company_country ,T2.company_status, T1.*
		FROM daas.t0export_20250703 T1 
		JOIN daas.dax_12136_temp_20250728 T2 
		ON t1.`domain` = t2.primary_domain and COALESCE(t1.primaryCountry,t1.personalCountry,'US') = T2.company_country 
		WHERE 
		REGEXP_LIKE(LOWER(TRIM(T1.title)), '^president$') 
		ORDER BY T2.primary_domain 
	) AS SUBQUERRY
) 
, cte2 as  
(
	SELECT *, count(*) over(partition by primary_domain) as cn from 
	( 
		SELECT DISTINCT t1.*  FROM CTE t1 
		join daas.dax_12136_temp_20250728 t2 on t1.company_id = t2.company_id 
		order by primary_domain
	)  
) SELECT * EXCEPT(cn) from cte2 where cn > 1 
;

--


-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-16  (ingestion)

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status, employee_count 
FROM
(
	SELECT DISTINCT T1.* ,  CEILING((ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement)) AS dept_size, 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728 T1 
	JOIN daas.o_cds_department_size T2 ON T1.company_id = T2.company_id 
	WHERE CEILING((ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement)) > (T1.employee_count*1.2)  
	AND T1.company_status = 'whitelist'
) AS SUBQUERRY WHERE RN = 1 
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-16   (qa)

SELECT DISTINCT * EXCEPT(RN)
FROM 
(
	SELECT DISTINCT T1.* ,  CEILING((ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement)) AS dept_size, 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728 T1 
	JOIN daas.o_cds_department_size T2 ON T1.company_id = T2.company_id 
	WHERE CEILING((ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement)) > ( T1.employee_count*1.2) 
	AND T1.company_status = 'whitelist' 
) AS SUBQUERRY WHERE RN = 1  
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- Company-17

SELECT DISTINCT T1.primary_domain 
from daas.o_cds T1 
JOIN
(
	SELECT DISTINCT T2.primary_domain , T1.company_id , T2.company_country 
	FROM daas.o_cds_tags T1 
	JOIN daas.dax_12136_temp_20250728 T2 
	ON T1.company_id = T2.company_id 
	WHERE T1.tags = 'fortune_1000' and company_country = 'US' AND company_status = 'whitelist'
) AS T2 ON T1.company_id = T2.company_id AND T1.company_country = T2.company_country 
where T1.is_hq = TRUE
; 

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- Company - 18

SELECT DISTINCT T2.primary_domain
FROM daas.o_cds_tags T1
JOIN daas.dax_12136_temp_20250728 T2
ON T1.company_id = T2.company_id
WHERE T1.tags = 'fortune_500'
AND company_country = 'US' AND company_status = 'whitelist'
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-19  (ingestion) 

SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status as status, street1 as street , city, state, postal_code as zipcode from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE company_country = 'US' AND 
	NULLIF(STATE,'') NOT IN ('WA', 'AL', 'AK', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MS', 'MO', 'MT', 'FL', 'NC', 'ND', 'NE', 'NM', 'NH', 'NV', 'NY', 'OH', 'OK', 'OR', 'RI', 'SC', 'MN', 'NJ', 'PA', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WI', 'WV', 'WY', 'PR')
) as subquerrY 
WHERE rn=1
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-19   (qa) 

SELECT DISTINCT * EXCEPT(RN) from 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE company_country = 'US' AND 
	NULLIF(STATE,'') NOT IN ('WA', 'AL', 'AK', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MS', 'MO', 'MT', 'FL', 'NC', 'ND', 'NE', 'NM', 'NH', 'NV', 'NY', 'OH', 'OK', 'OR', 'RI', 'SC', 'MN', 'NJ', 'PA', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WI', 'WV', 'WY', 'PR')
) as subquerry WHERE rn=1   
;  
 
-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-20  (ingestion) 
 
SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , SPLIT_PART(primary_domain , '.', 2) as aah,
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728  
	WHERE company_country = 'US' AND NULLIF(STATE, '') IS NOT NULL 
	AND
	(
	('.'||SPLIT_PART(primary_domain , '.', 2) IN ('.ac', '.ad', '.ae', '.af', '.ag', '.al', '.am', '.ao', '.ar', '.as', '.at', '.au', '.aw', '.ax', '.az', '.ba', '.bb', '.bd', '.be', '.bf', '.bg', '.bh', '.bi', '.bj', '.bm', '.bn', '.bo', '.br', '.bs', '.bt', '.bv', '.bw', '.by', '.bz', '.ca', '.cat', '.cf', '.ch', '.ci', '.ck', '.cl', '.cm', '.cn', '.co', '.cr', '.cu', '.cv', '.cw', '.cx', '.cy', '.cz', '.de', '.dj', '.dk', '.dm', '.do', '.dz', '.ec', '.ee', '.eg', '.es', '.et', '.eu', '.fi', '.fj', '.fk', '.fo', '.fr', '.ga', '.gal', '.gd', '.ge', '.gf', '.gg', '.gh', '.gi', '.gl', '.gm', '.gn', '.gp', '.gq', '.gr', '.gs', '.gt', '.gu', '.gw', '.gy', '.hk', '.hm', '.hn', '.ht', '.hu', '.id', '.ie', '.il', '.im', '.in', '.iq', '.ir', '.is', '.it', '.je', '.jm', '.jo', '.jp', '.ke', '.kg', '.kh', '.ki', '.km', '.kn', '.kp', '.kr', '.kw', '.kz', '.lb', '.lc', '.li', '.lk', '.lr', '.ls', '.lt', '.lu', '.lv', '.ma', '.mc', '.mg', '.mh', '.mk', '.ml', '.mm', '.mn', '.mo', '.mp', '.mq', '.mr', '.ms', '.mt', '.mu', '.mv', '.mw', '.mx', '.my', '.mz', '.na', '.nc', '.ne', '.nf', '.ng', '.ni', '.nl', '.no', '.np', '.nr', '.nu', '.nz', '.om', '.pa', '.pe', '.pf', '.pg', '.ph', '.pk', '.pl', '.pm', '.pn', '.pr', '.ps', '.pt', '.pw', '.py', '.qa', '.re', '.ro', '.rs', '.ru', '.rw', '.sa', '.sb', '.sc', '.sd', '.se', '.sg', '.sh', '.si', '.sj', '.sk', '.sl', '.sm', '.sn', '.so', '.sr', '.ss', '.st', '.sv', '.sx', '.sy', '.sz', '.tc', '.td', '.tf', '.tg', '.th', '.tj', '.tk', '.tl', '.tm', '.tn', '.to', '.tr', '.tt', '.tw', '.tz', '.ua', '.ug', '.uk', '.uy', '.uz', '.va', '.ve', '.vg', '.vi', '.vn', '.vu', '.wf', '.ye', '.yt', '.za', '.zm', '.zw')
	AND REGEXP_COUNT(primary_domain , '\\.' ) = 1)
	OR
	('.'||SPLIT_PART(primary_domain , '.', 3) IN ('.ac', '.ad', '.ae', '.af', '.ag', '.al', '.am', '.ao', '.ar', '.as', '.at', '.au', '.aw', '.ax', '.az', '.ba', '.bb', '.bd', '.be', '.bf', '.bg', '.bh', '.bi', '.bj', '.bm', '.bn', '.bo', '.br', '.bs', '.bt', '.bv', '.bw', '.by', '.bz', '.ca', '.cat', '.cf', '.ch', '.ci', '.ck', '.cl', '.cm', '.cn', '.co', '.cr', '.cu', '.cv', '.cw', '.cx', '.cy', '.cz', '.de', '.dj', '.dk', '.dm', '.do', '.dz', '.ec', '.ee', '.eg', '.es', '.et', '.eu', '.fi', '.fj', '.fk', '.fo', '.fr', '.ga', '.gal', '.gd', '.ge', '.gf', '.gg', '.gh', '.gi', '.gl', '.gm', '.gn', '.gp', '.gq', '.gr', '.gs', '.gt', '.gu', '.gw', '.gy', '.hk', '.hm', '.hn', '.ht', '.hu', '.id', '.ie', '.il', '.im', '.in', '.iq', '.ir', '.is', '.it', '.je', '.jm', '.jo', '.jp', '.ke', '.kg', '.kh', '.ki', '.km', '.kn', '.kp', '.kr', '.kw', '.kz', '.lb', '.lc', '.li', '.lk', '.lr', '.ls', '.lt', '.lu', '.lv', '.ma', '.mc', '.mg', '.mh', '.mk', '.ml', '.mm', '.mn', '.mo', '.mp', '.mq', '.mr', '.ms', '.mt', '.mu', '.mv', '.mw', '.mx', '.my', '.mz', '.na', '.nc', '.ne', '.nf', '.ng', '.ni', '.nl', '.no', '.np', '.nr', '.nu', '.nz', '.om', '.pa', '.pe', '.pf', '.pg', '.ph', '.pk', '.pl', '.pm', '.pn', '.pr', '.ps', '.pt', '.pw', '.py', '.qa', '.re', '.ro', '.rs', '.ru', '.rw', '.sa', '.sb', '.sc', '.sd', '.se', '.sg', '.sh', '.si', '.sj', '.sk', '.sl', '.sm', '.sn', '.so', '.sr', '.ss', '.st', '.sv', '.sx', '.sy', '.sz', '.tc', '.td', '.tf', '.tg', '.th', '.tj', '.tk', '.tl', '.tm', '.tn', '.to', '.tr', '.tt', '.tw', '.tz', '.ua', '.ug', '.uk', '.uy', '.uz', '.va', '.ve', '.vg', '.vi', '.vn', '.vu', '.wf', '.ye', '.yt', '.za', '.zm', '.zw')
	AND REGEXP_COUNT(primary_domain , '\\.' ) = 2)
	)
) as subquerry 
WHERE rn=1
;  

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-20  (qa) 

SELECT * EXCEPT(RN) FROM
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , SPLIT_PART(primary_domain , '.', 2) as aah,
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728  
	WHERE company_country = 'US' AND NULLIF(STATE, '') IS NOT NULL 
	AND
	(
	('.'||SPLIT_PART(primary_domain , '.', 2) IN ('.ac', '.ad', '.ae', '.af', '.ag', '.al', '.am', '.ao', '.ar', '.as', '.at', '.au', '.aw', '.ax', '.az', '.ba', '.bb', '.bd', '.be', '.bf', '.bg', '.bh', '.bi', '.bj', '.bm', '.bn', '.bo', '.br', '.bs', '.bt', '.bv', '.bw', '.by', '.bz', '.ca', '.cat', '.cf', '.ch', '.ci', '.ck', '.cl', '.cm', '.cn', '.co', '.cr', '.cu', '.cv', '.cw', '.cx', '.cy', '.cz', '.de', '.dj', '.dk', '.dm', '.do', '.dz', '.ec', '.ee', '.eg', '.es', '.et', '.eu', '.fi', '.fj', '.fk', '.fo', '.fr', '.ga', '.gal', '.gd', '.ge', '.gf', '.gg', '.gh', '.gi', '.gl', '.gm', '.gn', '.gp', '.gq', '.gr', '.gs', '.gt', '.gu', '.gw', '.gy', '.hk', '.hm', '.hn', '.ht', '.hu', '.id', '.ie', '.il', '.im', '.in', '.iq', '.ir', '.is', '.it', '.je', '.jm', '.jo', '.jp', '.ke', '.kg', '.kh', '.ki', '.km', '.kn', '.kp', '.kr', '.kw', '.kz', '.lb', '.lc', '.li', '.lk', '.lr', '.ls', '.lt', '.lu', '.lv', '.ma', '.mc', '.mg', '.mh', '.mk', '.ml', '.mm', '.mn', '.mo', '.mp', '.mq', '.mr', '.ms', '.mt', '.mu', '.mv', '.mw', '.mx', '.my', '.mz', '.na', '.nc', '.ne', '.nf', '.ng', '.ni', '.nl', '.no', '.np', '.nr', '.nu', '.nz', '.om', '.pa', '.pe', '.pf', '.pg', '.ph', '.pk', '.pl', '.pm', '.pn', '.pr', '.ps', '.pt', '.pw', '.py', '.qa', '.re', '.ro', '.rs', '.ru', '.rw', '.sa', '.sb', '.sc', '.sd', '.se', '.sg', '.sh', '.si', '.sj', '.sk', '.sl', '.sm', '.sn', '.so', '.sr', '.ss', '.st', '.sv', '.sx', '.sy', '.sz', '.tc', '.td', '.tf', '.tg', '.th', '.tj', '.tk', '.tl', '.tm', '.tn', '.to', '.tr', '.tt', '.tw', '.tz', '.ua', '.ug', '.uk', '.uy', '.uz', '.va', '.ve', '.vg', '.vi', '.vn', '.vu', '.wf', '.ye', '.yt', '.za', '.zm', '.zw')
	AND REGEXP_COUNT(primary_domain , '\\.' ) = 1)
	OR
	('.'||SPLIT_PART(primary_domain , '.', 3) IN ('.ac', '.ad', '.ae', '.af', '.ag', '.al', '.am', '.ao', '.ar', '.as', '.at', '.au', '.aw', '.ax', '.az', '.ba', '.bb', '.bd', '.be', '.bf', '.bg', '.bh', '.bi', '.bj', '.bm', '.bn', '.bo', '.br', '.bs', '.bt', '.bv', '.bw', '.by', '.bz', '.ca', '.cat', '.cf', '.ch', '.ci', '.ck', '.cl', '.cm', '.cn', '.co', '.cr', '.cu', '.cv', '.cw', '.cx', '.cy', '.cz', '.de', '.dj', '.dk', '.dm', '.do', '.dz', '.ec', '.ee', '.eg', '.es', '.et', '.eu', '.fi', '.fj', '.fk', '.fo', '.fr', '.ga', '.gal', '.gd', '.ge', '.gf', '.gg', '.gh', '.gi', '.gl', '.gm', '.gn', '.gp', '.gq', '.gr', '.gs', '.gt', '.gu', '.gw', '.gy', '.hk', '.hm', '.hn', '.ht', '.hu', '.id', '.ie', '.il', '.im', '.in', '.iq', '.ir', '.is', '.it', '.je', '.jm', '.jo', '.jp', '.ke', '.kg', '.kh', '.ki', '.km', '.kn', '.kp', '.kr', '.kw', '.kz', '.lb', '.lc', '.li', '.lk', '.lr', '.ls', '.lt', '.lu', '.lv', '.ma', '.mc', '.mg', '.mh', '.mk', '.ml', '.mm', '.mn', '.mo', '.mp', '.mq', '.mr', '.ms', '.mt', '.mu', '.mv', '.mw', '.mx', '.my', '.mz', '.na', '.nc', '.ne', '.nf', '.ng', '.ni', '.nl', '.no', '.np', '.nr', '.nu', '.nz', '.om', '.pa', '.pe', '.pf', '.pg', '.ph', '.pk', '.pl', '.pm', '.pn', '.pr', '.ps', '.pt', '.pw', '.py', '.qa', '.re', '.ro', '.rs', '.ru', '.rw', '.sa', '.sb', '.sc', '.sd', '.se', '.sg', '.sh', '.si', '.sj', '.sk', '.sl', '.sm', '.sn', '.so', '.sr', '.ss', '.st', '.sv', '.sx', '.sy', '.sz', '.tc', '.td', '.tf', '.tg', '.th', '.tj', '.tk', '.tl', '.tm', '.tn', '.to', '.tr', '.tt', '.tw', '.tz', '.ua', '.ug', '.uk', '.uy', '.uz', '.va', '.ve', '.vg', '.vi', '.vn', '.vu', '.wf', '.ye', '.yt', '.za', '.zm', '.zw')
	AND REGEXP_COUNT(primary_domain , '\\.' ) = 2)
	)
) AS SUBQUERRY 
;

-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-21  (ingestion) 

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status,linkedin_url from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE linkedin_url NOT ILIKE '%linkedin.com%' 
) as subquerry
WHERE rn=1 
;  
 
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-21  (qa) 
	
SELECT * EXCEPT(RN) from 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE linkedin_url NOT ILIKE '%linkedin.com%'  
) as subquerry WHERE rn=1   
; 
 
-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-22  (ingestion)

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status, ARRAY_JOIN(ARRAY_SORT(COLLECT_SET(digits)), '|') as removePhone  from 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , length(REGEXP_REPLACE(digits, '[^0-9x+]', '') ),
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728
	WHERE (digits not ILIKE '%x%' and length(REGEXP_REPLACE(digits, '[^0-9x+]', '') ) > 15)
	OR (digits not ILIKE '%x%' and length(REGEXP_REPLACE(digits, '[^0-9x+]', '') ) < 7)
	OR  (( NOT REGEXP_LIKE(digits, '^[0-9]' ) OR ( digits ILIKE '%x%' AND LENGTH( SPLIT_PART(digits,'x',2) ) > 7 ) ) AND (( digits ILIKE '+1%' ) or ( digits not ILIKE '+%' )))
) as subquerry
WHERE rn=1 
AND  NOT( LENGTH (REGEXP_REPLACE(digits,'[^a-zA-Z0-9]','')) = 10 AND company_country = 'US' )
GROUP BY ALL 
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-22  (qa) 
 
SELECT * EXCEPT(RN)
from
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , length(REGEXP_REPLACE(digits, '[^0-9x+]', '') ),
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728
	WHERE (digits not ILIKE '%x%' and length(REGEXP_REPLACE(digits, '[^0-9x+]', '') ) > 15)
	OR (digits not ILIKE '%x%' and length(REGEXP_REPLACE(digits, '[^0-9x+]', '') ) < 7)
	OR  (( NOT REGEXP_LIKE(digits, '^[0-9]' ) OR ( digits ILIKE '%x%' AND LENGTH( SPLIT_PART(digits,'x',2) ) > 7 ) ) AND (( digits ILIKE '+1%' ) or ( digits not ILIKE '+%' )))
) as subquerry WHERE rn=1
AND  NOT( LENGTH (REGEXP_REPLACE(digits,'[^a-zA-Z0-9]','')) = 10 AND company_country = 'US' )
;

-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- Company-23

SELECT DISTINCT T1.primary_domain , T1.street1 ,T2.is_hq 
FROM daas.dax_12136_temp_20250728 T1 
JOIN daas.o_cds T2 ON T1.company_id = T2.company_id
WHERE T2.is_hq <> TRUE 
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- company-24  (ingestion)

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, primary_name AS name, company_status as status, employee_count , ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) AS revenue from 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE employee_count > 200 AND ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  < 1000000  AND ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) > 0 
	AND NOT
		(
		  LEFT(NULLIF(naics,''),2) IN ('91', '92', '99') 
		  OR
		  LEFT(NULLIF(naics,''),4) IN ('6112', '6111', '6113', '6114', '6115', '6116')
		  OR LOWER(TRIM(industry)) IN 
		  (
			'elementary and secondary schools', 'junior colleges', 'colleges', 'universities, and professional schools', 'business schools and computer and management training', 
			'technical and trade schools' , 'other schools and instruction industries'
		  )
	    )
) as subquerry WHERE RN = 1
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-24  (qa)

SELECT DISTINCT * EXCEPT(RN) FROM 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE employee_count > 200 AND ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  < 1000000  AND ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) > 0 
	AND NOT 
		( 
		  LEFT(NULLIF(naics,''),2) IN ('91', '92', '99') 
		  OR
		  LEFT(NULLIF(naics,''),4) IN ('6112', '6111', '6113', '6114', '6115', '6116')
		  OR LOWER(TRIM(industry)) IN 
		  ( 
			'elementary and secondary schools', 'junior colleges', 'colleges', 'universities, and professional schools', 'business schools and computer and management training', 
			'technical and trade schools' , 'other schools and instruction industries'
		  ) 
	    ) 
) as subquerry WHERE RN = 1 
; 

-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------  
-- company-25   (ingestion)

SELECT * FROM daas.dax_12136_temp_20250728 limit 10 ;


SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status as status, employee_count , ROUND(NULLIF(revenue, '0')::DOUBLE*1E6) AS revenue from 
( 
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE employee_count < 200 AND ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  > 1000000000  
	AND NOT 
		( 
		  LEFT(NULLIF(naics,''),2) IN ('91', '92', '99')
		  OR
		  LEFT(NULLIF(naics,''),4) IN ('6112', '6111', '6113', '6114', '6115', '6116')
		  OR LOWER(TRIM(industry)) IN 
		  (
			'elementary and secondary schools', 'junior colleges', 'colleges', 'universities, and professional schools', 'business schools and computer and management training', 
			'technical and trade schools' , 'other schools and instruction industries'
		  ) 
	    ) 
) as subquerry WHERE RN = 1
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-25  (qa) 
  
SELECT * EXCEPT(RN) FROM
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	from daas.dax_12136_temp_20250728 
	WHERE employee_count < 200 AND NULLIF(revenue, '0')::DOUBLE*1E6 > 1000000000                 --ROUND(NULLIF(revenue, '0')::DOUBLE*1E6)  > 1000000000  
	AND NOT 
		(
		  LEFT(NULLIF(naics,''),2) IN ('91', '92', '99')
		  OR
		  LEFT(NULLIF(naics,''),4) IN ('6112', '6111', '6113', '6114', '6115', '6116')
		  OR LOWER(TRIM(industry)) IN 
		  ( 
			'elementary and secondary schools', 'junior colleges', 'colleges', 'universities, and professional schools', 'business schools and computer and management training', 
			'technical and trade schools' , 'other schools and instruction industries'
		  )
	    )
) as subquerry WHERE RN = 1
;
 
-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-26   (ingestion) 

SELECT DISTINCT primary_domain AS domain , company_country AS countryCode, last_funding_round AS Round , last_funding_date as funding_Month, last_funding_amount as funding_Round_Amount from 
(
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(T1.digits) = 10 THEN 0 ELSE 1 END, LENGTH(T1.digits) DESC) AS RN , T2.funding, T2.last_funding_date , T2.last_funding_round , 
	T2.last_funding_amount
	from daas.dax_12136_temp_20250728 T1 JOIN daas.o_cds T2 ON T1.company_id = T2.company_id 
	WHERE YEAR(last_funding_date)  >= 2024 AND T2.last_funding_round= 'Seed' AND T1.employee_count > 100 
	AND funding IS NOT NULL 
) as subquerry WHERE RN = 1
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-26  (qa) 

SELECT * EXCEPT(RN) FROM
(
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(T1.digits) = 10 THEN 0 ELSE 1 END, LENGTH(T1.digits) DESC) AS RN , T2.funding, T2.total_funding_amount , T2.last_funding_round , 
	T2.last_funding_amount , T2.last_funding_date 
	from daas.dax_12136_temp_20250728 T1 JOIN daas.o_cds T2 ON T1.company_id = T2.company_id 
	WHERE YEAR(last_funding_date)  >= 2024 AND T2.last_funding_round= 'Seed' AND T1.employee_count > 100 
	AND funding IS NOT NULL 
) as subquerry WHERE RN = 1 
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-27   (ingestion) 

SELECT DISTINCT primary_domain as domain, company_country AS countryCode , last_funding_round as Round , last_funding_date as funding_Month ,last_funding_amount AS funding_Round_Amount
from
( 
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(T1.digits) = 10 THEN 0 ELSE 1 END, LENGTH(T1.digits) DESC) AS RN , ROUND(NULLIF(T2.actual_revenue, '0')::DOUBLE*1E6) as actual_revenue , 
	T2.last_funding_round , T2.last_funding_date , T2.last_funding_amount
	from daas.dax_12136_temp_20250728 T1 JOIN daas.o_cds T2 ON T1.company_id = T2.company_id  
	WHERE ROUND(NULLIF(T2.actual_revenue, '0')::DOUBLE*1E6)  > 5000000 AND T2.last_funding_round= 'Seed' 
) as subquerry WHERE RN = 1 
;

--                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-27  (qa) 

SELECT * EXCEPT(RN) FROM 
(
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, ceo_count,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(T1.digits) = 10 THEN 0 ELSE 1 END, LENGTH(T1.digits) DESC) AS RN , ROUND(NULLIF(T2.actual_revenue, '0')::DOUBLE*1E6) as actual_revenue , 
	T2.last_funding_round , T2.last_funding_date , T2.last_funding_amount
	from daas.dax_12136_temp_20250728 T1 JOIN daas.o_cds T2 ON T1.company_id = T2.company_id  
	WHERE ROUND(NULLIF(T2.actual_revenue, '0')::DOUBLE*1E6)  > 5000000 AND T2.last_funding_round= 'Seed' 
) as subquerry 
WHERE RN = 1
;

-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- company-28   (QA)

CREATE OR REPLACE TABLE daas.12136_TEMP AS
SELECT
DISTINCT T2.primary_domain, T2.primary_name, t2.company_country ,T2.company_status, T1.title 
FROM daas.t0export_20250703 T1
JOIN daas.dax_12136_temp_20250728 T2
ON LOWER(TRIM(t1.`domain`)) = LOWER(TRIM(t2.primary_domain))
WHERE
(
	T1.title ILIKE '%ceo%' 
	OR  T1.title ILIKE '%Chief executive officer%'
	OR REGEXP_LIKE(T1.title  , '(?i)(^|[^a-z0-9])c ?[-_,.\/&]? ?e ?[-_,.\/&]? ?o([^a-z0-9]|$)') 
	or T1.title ILIKE '%chief%executive%officer%' 
)
AND T2.company_status = 'whitelist'
;
 
--
------------------------------------------------------------------------------------------------------------------------------------------------------------
--

SELECT DISTINCT primary_domain as domain, company_country as countryCode , primary_name as name, company_status as status
from daas.dax_12136_temp_20250728
where LOWER(TRIM(primary_domain)) NOT IN ( SELECT DISTINCT LOWER(TRIM(primary_domain)) from daas.12136_TEMP )
AND company_status = 'whitelist'
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--

SELECT DISTINCT T1.primary_domain, T1.primary_name, T2.title 
FROM daas.12136_TEMP T1
JOIN daas.t0export_20250703 T2
ON LOWER(TRIM(T1.primary_domain)) = LOWER(TRIM(T2.`domain`))
--WHERE T1.primary_domain = 'kapjas.co.id'
ORDER BY T1.primary_domain
--LIMIT 100000
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--

SELECT DISTINCT primary_domain as domain, company_country as countryCode , primary_name as name, company_status as status
from daas.dax_12136_temp_20250728
where LOWER(TRIM(primary_domain)) NOT IN ( SELECT DISTINCT LOWER(TRIM(primary_domain)) from daas.12136_TEMP )
AND company_status = 'whitelist'
;

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-29   (ingestion)  

SELECT DISTINCT primary_domain as domain, company_country AS countryCode, primary_name AS name, company_status as status , Street1 as street , city, state, postal_code as zipcode
from
( 
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN,LEFT(T1.postal_code, 5) lp ,zip 
	FROM daas.dax_12136_temp_20250728 T1 	
	JOIN daas.TEMP_table_city_state_ml T2 ON LEFT(T1.postal_code, 5) = zip
	WHERE lower(trim(T1.state)) != lower(trim(T2.state_id)) AND T2.zip IS NOT NULL AND T1.company_country = 'US'
) as subquerry WHERE RN = 1
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-29  (qa)    	
 
SELECT DISTINCT * EXCEPT(RN) FROM
(
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN ,
	T2.city , T2.state_id , T2.state_name,  T2.zip 
	FROM daas.dax_12136_temp_20250728 T1 	
	JOIN daas.TEMP_table_city_state_ml T2 ON LEFT(T1.postal_code, 5) = zip
	WHERE T1.state != T2.state_id AND T2.zip IS NOT NULL AND T1.company_country = 'US'
) as subquerry WHERE RN = 1 
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-30   (ingestion)

SELECT DISTINCT primary_domain as domain, primary_name as name, company_country AS countryCode ,company_status AS status 
from
( 
    SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag),
    ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN ,T2.domain AS alt_domain, T2.domain_type  
    FROM daas.dax_12136_temp_20250728 T1 
 	   JOIN daas.o_cds_alternate_domains T2 ON T1.company_id = T2.company_id 
    WHERE
    ( 
    REGEXP_LIKE(primary_domain, 'careers?|about|jobs') 
--	    AND NOT REGEXP_LIKE(LOWER(primary_name), '\\b(careers?|about|jobs)\\b')
    AND primary_name NOT ILIKE '%career%' AND primary_name NOT ILIKE '%about%' AND primary_name NOT ILIKE '%job%' AND primary_domain NOT ILIKE '%boutique%'
    )
    AND primary_domain <> primary_name 
    AND LOWER(TRIM(SPLIT_PART(primary_domain,'.',1))) <> REGEXP_REPLACE(LOWER(TRIM(primary_name)), '[^a-z0-9-]', '') 
) as subquerry WHERE RN = 1 
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-30  (qa)

SELECT * EXCEPT(RN) FROM
(
    SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag),
    ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
    FROM daas.dax_12136_temp_20250728 T1 
 	   JOIN daas.o_cds_alternate_domains T2 ON T1.company_id = T2.company_id 
    WHERE
    ( 
    REGEXP_LIKE(primary_domain, 'careers?|about|jobs') 
--	    AND NOT REGEXP_LIKE(LOWER(primary_name), '\\b(careers?|about|jobs)\\b')
    AND primary_name NOT ILIKE '%career%' AND primary_name NOT ILIKE '%about%' AND primary_name NOT ILIKE '%job%' AND primary_domain NOT ILIKE '%boutique%'
    ) 
    AND primary_domain <> primary_name 
    AND LOWER(TRIM(SPLIT_PART(primary_domain,'.',1))) <> REGEXP_REPLACE(LOWER(TRIM(primary_name)), '[^a-z0-9-]', '') 
--    AND NOT REGEXP_LIKE(LOWER(primary_name), REGEXP_REPLACE(primary_domain, '\\.', '')) 
) as subquerry WHERE RN = 1 
;  

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-31   (ingestion)

SELECT DISTINCT primary_domain as domain, company_country AS countryCode, primary_name AS name, company_status as status, employee_count
from
(
    SELECT DISTINCT * EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag),  
    ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN
    FROM daas.dax_12136_temp_20250728
    WHERE employee_count > 50000 and NULLIF( linkedin_url, '') IS NULL
) as subquerry WHERE RN = 1 
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-31  (qa) 
 
SELECT * EXCEPT(RN) FROM 
(
	   SELECT DISTINCT * EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag),  
    ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
    FROM daas.dax_12136_temp_20250728 
    WHERE employee_count > 50000 and NULLIF( linkedin_url, '') IS NULL 
) as subquerry WHERE RN = 1 
;  

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-32   (ingestion) 
 
SELECT DISTINCT primary_domain as domain, company_country AS countryCode, primary_name AS name, company_status as status, employee_count
FROM
(
    SELECT DISTINCT * EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag),  
    ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN , 
    EXPLODE(SPLIT(naics, '\\|' )) as explode_naics,REGEXP_COUNT(naics, '\\|' )
    FROM daas.dax_12136_temp_20250728 
    WHERE  NULLIF(naics, '' ) IS NOT NULL 
--    limit 1000 
) AS subquerry WHERE RN = 1 AND explode_naics NOT IN ( SELECT DISTINCT `Naics Codes` FROM si_dataops_prod.daas.temp_table_department_size_ml ) 
; 

-- 
------------------------,-------------------------------------------------------------------------------------------------------------------------------------------------- 
-- company-32  (qa) 
 
SELECT * EXCEPT(RN) FROM
( 
    SELECT DISTINCT * EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag),  
    ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN , 
    EXPLODE(SPLIT(naics, '\\|' )) as explode_naics,REGEXP_COUNT(naics, '\\|' )
    FROM daas.dax_12136_temp_20250728 
    WHERE  NULLIF(naics, '' ) IS NOT NULL 
) as subquerry WHERE RN = 1 AND explode_naics NOT IN ( SELECT DISTINCT `Naics Codes` FROM si_dataops_prod.daas.temp_table_department_size_ml )  
; 

--
------------------------,--------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 33 Ingestion 

SELECT DISTINCT primary_domain AS domain, company_country AS countryCode, primary_name AS name, company_status as status, naics
from
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY null) AS RN 
	FROM daas.dax_12136_temp_20250728 T1 
	where (naics is null or naics = '')
	and company_status = 'whitelist'
) as subquerry WHERE RN = 1 
;

--
------------------------,--------------------------------------------------------------------------------------------------------------------------------------------------
-- Company 33 QA

SELECT * EXCEPT(RN) FROM 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY null) AS RN 
	FROM daas.dax_12136_temp_20250728 T1 
	where (naics is null or naics = '')
	and company_status = 'whitelist'
) as subquerry WHERE RN = 1 
; 

--
------------------------,--------------------------------------------------------------------------------------------------------------------------------------------------
-- Company 34 Ingestion 

SELECT DISTINCT primary_domain AS domain
, company_country AS countryCode, primary_name AS name, company_status as status, employee_count, tags FROM
(
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag), T2.tags
--	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728 AS T1 
	JOIN daas.o_cds_tags AS T2 ON T1.company_id =T2.company_id 
	WHERE LOWER(TRIM(T2.tags)) NOT IN 
	( 
	'100_fastest_growing', 
	'fast_500_deloitte',
	'federal_contractors',
	'forbes_global_2000',
	'fortune_500',
	'fortune_1000',
	'funding_round_a',
	'funding_round_b',
	'funding_round_c', 
	'funding_round_d',
	'funding_round_seed',
	'inc_5000', 
	'linkedin_top_startups_2021',
	'managed_service_providers',
	'public_companies',
	'saas_1000',
	'value_added_resellers'
	)
) as subquerry
--WHERE rn = 1 
;

--
------------------------,--------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 34 QA

SELECT DISTINCT * --EXCEPT(RN)
FROM 
(
	SELECT DISTINCT T1.* EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag), T2.tags, 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id||T2.tags ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728 AS T1 
	JOIN daas.o_cds_tags AS T2 ON T1.company_id =T2.company_id 
	WHERE LOWER(TRIM(T2.tags)) NOT IN
	( 
	'100_fastest_growing',
	'fast_500_deloitte',
	'federal_contractors',
	'forbes_global_2000',
	'fortune_500',
	'fortune_1000',
	'funding_round_a',
	'funding_round_b',
	'funding_round_c', 
	'funding_round_d',
	'funding_round_seed',
	'inc_5000', 
	'linkedin_top_startups_2021',
	'managed_service_providers',
	'public_companies',
	'saas_1000',
	'value_added_resellers'
	)
) AS SUBQUERRY 
WHERE rn = 1
;

--
------------------------,--------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY - 35 Ingestion 

SELECT DISTINCT primary_domain as domain, company_country AS countryCode, primary_name AS name, company_status as status, employee_count, revenue
from
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY null) AS RN 
	FROM daas.dax_12136_temp_20250728 
	where employee_count in(0,1) 
	AND ROUND(NULLIF(revenue, '0')::DOUBLE * 1E6) > 10000000
) as subquerry WHERE RN = 1  
;

--
------------------------,--------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 35 QA

SELECT * EXCEPT(RN) FROM 
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) , 
	ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY null) AS RN 
	FROM daas.dax_12136_temp_20250728 
	where employee_count in(0,1) 
	AND ROUND(NULLIF(revenue, '0')::DOUBLE * 1E6) > 10000000
)
;

-- 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- COMPANY- 36 Ingestion

SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status AS status, linkedin_url as li_url FROM 
(SELECT DISTINCT t1.primary_domain, t1.company_country, t1.primary_name, t1.company_status, t1.revenue, t1.linkedin_url,
ROW_NUMBER() OVER (PARTITION BY t1.company_id ORDER BY t1.revenue DESC) AS RN 
FROM daas.dax_12136_temp_20250728 t1 
JOIN (SELECT company_id, linkedin_url,revenue, primary_domain  FROM daas.dax_12136_temp_20250728 WHERE  
company_country = 'US' AND linkedin_url IS NOT NULL AND company_status = 'whitelist' order by ROUND(NULLIF(revenue, '0')::DOUBLE * 1E6) DESC limit 20000  ) t2 
ON t1.linkedin_url = t2.linkedin_url 
WHERE t1.company_status IN ('active', 'whitelist')
AND t1.company_id <>  t2.company_id
AND t1.primary_domain <> T2.primary_domain
)
AS subquery WHERE RN = 1
;

-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Company - 36 QA 

SELECT DISTINCT * EXCEPT(RN) FROM
(SELECT DISTINCT t1.primary_domain, t1.company_country, t1.primary_name, t1.company_status, t1.revenue, t1.linkedin_url,
ROW_NUMBER() OVER (PARTITION BY t1.company_id ORDER BY t1.revenue DESC) AS RN 
FROM daas.dax_12136_temp_20250728 t1 
JOIN (SELECT company_id, linkedin_url,revenue, primary_domain  FROM daas.dax_12136_temp_20250728 WHERE  
company_country = 'US' AND linkedin_url IS NOT NULL AND company_status = 'whitelist' order by ROUND(NULLIF(revenue, '0')::DOUBLE * 1E6) DESC limit 20000  ) t2 
ON t1.linkedin_url = t2.linkedin_url 
WHERE t1.company_status IN ('active', 'whitelist')
AND t1.company_id <>  t2.company_id
AND t1.primary_domain <> T2.primary_domain
)
AS subquery WHERE RN = 1 
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 37 Ingestion 

SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status AS status, LENGTH(primary_name) as length , HV_count, MV_count , (MV_count+MV_count) as total_count 
from daas.dax_12136_temp_20250728 
WHERE primary_domain IN 
(
	SELECT primary_domain
	FROM daas.o_cds 
	WHERE company_status IN ('active','whitelist')
	ORDER BY LENGTH(primary_name) DESC  
) AND LENGTH(primary_name) > 60 
; 

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Company 37 QA 

SELECT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag, RN ) FROM 
(
	SELECT DISTINCT * , ROW_NUMBER() OVER (PARTITION BY company_id ORDER BY revenue DESC) AS RN 
	from daas.dax_12136_temp_20250728 
	WHERE primary_domain IN
	(
		SELECT primary_domain
		FROM daas.o_cds 
		WHERE company_status IN ('active','whitelist')
		ORDER BY LENGTH(primary_name) DESC  
	) AND LENGTH(primary_name) > 60 
) AS subquerry 
where RN = 1 
; 
 
--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 38 Ingestion

with cte as
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag), 
	ROW_NUMBER() OVER (PARTITION BY t1.company_id ORDER BY t1.revenue DESC) AS RN
	from daas.dax_12136_temp_20250728 T1 
	JOIN 
	(
			SELECT DISTINCT T1.company_id
			FROM daas.o_cds_tags AS T1 
			JOIN daas.dax_12136_temp_20250728 AS T2 ON T1.company_id = T2.company_id AND T1.tags = 'forbes_global_2000'
			WHERE T2.company_id NOT IN
			( 
				SELECT DISTINCT T1.company_id 
				FROM daas.person_top_positions_20250616_fixed_gr T1 
				JOIN daas.o_cds_tags T2 ON T1.company_id = T2.company_id AND T2.tags = 'forbes_global_2000'
				WHERE T1.title_level = 'chf' AND T1.title_level NOT IN ('brd', 'vp', 'dir', 'mgr', 'stf', 'other')
			)
	) T2 ON T1.company_id = T2.company_id
)
SeLECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status AS status from cte 
WHERE rn = 1
; 

--
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- company - 38 (QA)

with cte as
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number, founder_count, president_count, ceo_presence_flag, naics_presence_flag), 
	ROW_NUMBER() OVER (PARTITION BY t1.company_id ORDER BY t1.revenue DESC) AS RN
	from daas.dax_12136_temp_20250728 T1 
	JOIN
	(
			SELECT DISTINCT T1.company_id
			FROM daas.o_cds_tags AS T1 
			JOIN daas.dax_12136_temp_20250728 AS T2 ON T1.company_id = T2.company_id AND T1.tags = 'forbes_global_2000'
			WHERE T2.company_id NOT IN 
			( 
				SELECT DISTINCT T1.company_id 
				FROM daas.person_top_positions_20250616_fixed_gr T1 
				JOIN daas.o_cds_tags T2 ON T1.company_id = T2.company_id AND T2.tags = 'forbes_global_2000'
				WHERE T1.title_level = 'chf' AND T1.title_level NOT IN ('brd', 'vp', 'dir', 'mgr', 'stf', 'other')
			)
	) T2 ON T1.company_id = T2.company_id 
) 
SeLECT DISTINCT * EXCEPT(RN) from cte 
WHERE rn = 1
;  

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 39 INGESTION

SELECT DISTINCT primary_domain as domain , company_country AS countryCode, primary_name AS name, company_status as status,employee_count
from
(   
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) ,(HV_count + MV_count) as total_count , 
	ROW_NUMBER() OVER (PARTITION BY t1.company_id ORDER BY t1.revenue DESC) AS RN
	FROM daas.dax_12136_temp_20250728 T1
	where(HV_count + MV_count) > employee_count
	AND company_status IN ('whitelist')
) 
as subquerry --WHERE RN = 1 
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 39 QA 

SELECT DISTINCT * FROM
(
	SELECT DISTINCT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ) ,(HV_count + MV_count) as total_count, 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN  
	FROM daas.dax_12136_temp_20250728 T1 
	where(HV_count + MV_count) > employee_count
	AND company_status IN ('whitelist')
)
 as subquerry
; 

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- COmpany - 40 (ingestion)

SELECT DISTINCT primary_domain, company_country AS countryCode, primary_name AS name, company_status as status, ds_it, ds_marketing, ds_operations, ds_rnd, ds_sales, ds_finance
ds_hr, ds_legal, ds_procurement 
, employee_count
FROM
( 
	SELECT DISTINCT T1.* ,T2.* , 
	ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728 T1
	JOIN daas.o_cds_department_size T2 ON T1.company_id = T2.company_id 
	WHERE
	( 
	ds_it > (T1.employee_count) OR ds_marketing > (T1.employee_count) OR ds_operations > (T1.employee_count) OR ds_rnd > (T1.employee_count) OR ds_sales > (T1.employee_count) OR 
	ds_finance > (T1.employee_count) OR ds_hr > (T1.employee_count) OR ds_legal > (T1.employee_count) OR ds_procurement > (T1.employee_count) 
	)   
	and (ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement) is not null 
) AS SUBQUERRY WHERE RN = 1 
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- COMPANY 41 (QA)

SELECT * from
(
	SELECT DISTINCT primary_domain As domain, company_country AS countryCode, primary_name AS name, company_status as status, dept_size , employee_count 
	FROM 
	(
		SELECT DISTINCT T1.* ,(ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement) AS dept_size, 
		ROW_NUMBER()OVER(PARTITION BY T1.company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
		FROM daas.dax_12136_temp_20250728 T1 
		JOIN daas.o_cds_department_size T2 ON T1.company_id = T2.company_id 
		WHERE (ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement) > (T1.employee_count)  
		and (ds_it + ds_marketing + ds_operations + ds_rnd + ds_sales + ds_finance + ds_hr + ds_legal + ds_procurement) is not null 
	) AS SUBQUERRY WHERE RN = 1 
) where ( dept_size-employee_count ) > 1 
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--
DESCRIBE HISTORY daas.o_cds;

CREATE OR REPLACE TABLE daas.DAX_12136_backup_cds_20250729_ML AS
SELECT * FROM daas.o_cds VERSION AS OF 75;

CREATE OR REPLACE TABLE si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML  AS 
SELECT DISTINCT *
FROM daas.DAX_12136_backup_cds_20250729_ML
WHERE company_status = 'whitelist'
;

CREATE TABLE si_dataops_prod.daas.DAX_7397_task6_ML AS 
SELECT DISTINCT 
	 oc.primary_domain AS `domain` 
	,oc.company_country AS countryCode   
	,oc.location_id AS locationId 
	,bc.linkedin_url AS Old_LI_URL 
	,oc.linkedin_url AS Current_LI_URL
	,TRUE AS Status 
FROM
	 si_dataops_prod.daas.o_cds oc 
INNER JOIN
	 si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML bc ON oc.company_id = bc.company_id
WHERE
	 oc.company_status = 'whitelist'
	 AND REGEXP_REPLACE(oc.linkedin_url, '.*linkedin.com', '') != REGEXP_REPLACE(bc.linkedin_url, '.*linkedin.com', '')
;

--


SELECT primary_domain AS domain, primary_name as name ,company_country as countryCode, company_status as status FROM daas.dax_12136_temp_20250728 
--WHERE primary_name ILIKE '%previously known as %'
--WHERE REGEXP_LIKE(primary_name, '\\b(?i)previously ?known ?as\\b' ) 
WHERE primary_name ILIKE '%primaryknownas%'
limit 100 ; 

--

SELECT REGEXP_LIKE('astegic aquisition of', '\\b(?i)previous|known ?as|formerly|aquisition ? of|an ?aquisition ?of|owned ?by|merged ?with|aquired ?by|joined|formerly known ?as|previously ?known ?as|renamed? ?to|transitioned ?to|changed ?name ?to|trading as|closed|permanently closed|shut ?down\\b' ) ; 

--
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
-- 

SELECT primary_domain AS domain, primary_name as name ,company_country as countryCode, company_status as status 
from daas.dax_12136_temp_20250728
where REGEXP_LIKE(primary_name, '(i?)\\bdba\\b' ) 
LIMIT 1000
; 

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- 
-- This task is regarding the weekly ticket dax-7397
-- Now we will take backup from the previous delivery date And compare with the latest cds data
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		-- Taking the backup of previous table ( from 42-46 we need to send only QA files )
		
		-- For RUle 42-46
		
		DESCRIBE HISTORY daas.o_cds ;
		
		--
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		-- Take the backup of the week in which last bad data was delivered ( basically we gonna compare the results of that cds with the latest cds table )
		
		CREATE OR REPLACE TABLE daas.DAX_12136_backup_cds_20250729_ML AS
		SELECT * FROM daas.o_cds VERSION AS OF 75 ;
		
		--
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		--
		
		CREATE OR REPLACE TABLE si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML  AS 
		SELECT DISTINCT *
		FROM daas.DAX_12136_backup_cds_20250729_ML
		WHERE company_status = 'whitelist'
		;
		
		--
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		--
		
		CREATE TABLE si_dataops_prod.daas.DAX_12136_comparison_results_ML AS -- create new with companies that changed their data more than 10%
		WITH prep AS
			(
				SELECT DISTINCT  
					 oc.company_id 
					,oc.primary_name
					,oc.primary_domain
					,oc.company_country
					,oc.linkedin_url
					,bcd.employee_count AS previous_employee_count
					,oc.employee_count AS current_employee_count
					,((oc.employee_count / bcd.employee_count) * 100) - 100 AS employee_count_diff
					,try_cast(bcd.revenue AS int) AS previous_revenue
					,try_cast(oc.revenue AS int) AS current_revenue
					,((try_cast(oc.revenue AS int) / try_cast(bcd.revenue AS int)) * 100) - 100 AS revenue_diff
					,COUNT(oc.company_id) OVER(PARTITION BY oc.primary_name, oc.location_id) AS dupe
				FROM 
					 si_dataops_prod.daas.o_cds oc 
				LEFT JOIN si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML bcd ON oc.company_id = bcd.company_id AND oc.location_id = bcd.location_id 
				WHERE 1=1
					AND bcd.employee_count != 0
					AND try_cast(bcd.revenue AS int) != 0
					AND oc.company_status = 'whitelist' 
					AND bcd.is_hq IS TRUE
					AND oc.is_hq IS TRUE
			)
		SELECT * 
		FROM 
			 prep 
		WHERE 1=1 
			 AND 
			 	(
			 		employee_count_diff NOT BETWEEN -10 AND 10
			 	    OR revenue_diff NOT BETWEEN -10 AND 10
			 	)
		;
		
		--
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		--
		
		DROP TABLE si_dataops_prod.daas.DAX_12136_company_42_ML ;
		
		--
		------------------------------------------------------------------------------------------------------------------------------------------------------
		--
		
		SHOW TABLES IN DAAS LIKE '*bp15_company_file*' ;
		 
		-- 
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		-- Company 42
		
		CREATE TABLE si_dataops_prod.daas.DAX_12136_company_42_ML AS
		WITH prep AS -- this part returns the result for companies that changed their revenue and\or employee count more that 10% from previous
		( 
		SELECT CASE
				WHEN website ILIKE 'http://www.%' THEN LOWER(SUBSTRING(website, 12))
				WHEN website ILIKE 'https://www.%' THEN LOWER(SUBSTRING(website, 13))
				WHEN website ILIKE 'http://%' THEN LOWER(SUBSTRING(website, 8))
				WHEN website ILIKE 'https://%' THEN LOWER(SUBSTRING(website, 9))
				ELSE NULL 
			   END AS cleaned_website, country_code, MAX(updated_month) AS max_month, MAX(social_followers :: int) AS max_follow
		FROM si_dataops_prod.daas.bp15_company_file_jul2025_gr WHERE employees_num != '\N' AND social_followers != '\N'
		GROUP BY 1, 2 
		)
		SELECT
			 cr.primary_name
			,cr.primary_domain
			,cr.company_country
			,cr.linkedin_url
			,cr.previous_employee_count
			,cr.current_employee_count
			,cr.employee_count_diff
			,cr.previous_employee_count - cr.current_employee_count AS employee_diff_amount
			,CASE WHEN (CASE 
				WHEN bp15.website ILIKE 'http://www.%' THEN LOWER(SUBSTRING(bp15.website, 12))
				WHEN bp15.website ILIKE 'https://www.%' THEN LOWER(SUBSTRING(bp15.website, 13))
				WHEN bp15.website ILIKE 'http://%' THEN LOWER(SUBSTRING(bp15.website, 8))
				WHEN bp15.website ILIKE 'https://%' THEN LOWER(SUBSTRING(bp15.website, 9))
				ELSE NULL 
			   END) IS NULL THEN 0 ELSE (bp15.employees_num :: int * 1.1) END AS BP_15_employee_count
			,cr.previous_revenue * 1000000 AS previous_revenue
			,cr.current_revenue * 1000000 AS current_revenue
			,cr.revenue_diff
			,(cr.previous_revenue - cr.current_revenue) * 1000000 AS revenue_diff_amount
		FROM si_dataops_prod.daas.DAX_12136_comparison_results_ML cr
		LEFT JOIN prep bp ON cr.primary_domain = bp.cleaned_website
		LEFT JOIN si_dataops_prod.daas.bp15_company_file_jul2025_gr bp15 ON bp.cleaned_website = CASE 
				WHEN bp15.website ILIKE 'http://www.%' THEN LOWER(SUBSTRING(bp15.website, 12))
				WHEN bp15.website ILIKE 'https://www.%' THEN LOWER(SUBSTRING(bp15.website, 13))
				WHEN bp15.website ILIKE 'http://%' THEN LOWER(SUBSTRING(bp15.website, 8))
				WHEN bp15.website ILIKE 'https://%' THEN LOWER(SUBSTRING(bp15.website, 9))
				ELSE NULL 
			   END 
		WHERE cr.company_country = UPPER(bp.country_code) AND cr.company_country = UPPER(bp15.country_code)
		AND bp15.social_followers = bp.max_follow AND bp15.social_followers != '\N' AND bp15.employees_num != '\N'
		; 
		
		-- 
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		-- Data delivery for company-42
		
		SELECT DISTINCT * FROM si_dataops_prod.daas.DAX_12136_company_42_ML;
		
		--
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		--Company 43
		
		DROP TABLE si_dataops_prod.daas.DAX_12136_Company_43_ML ;
		
		-- 
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		CREATE TABLE si_dataops_prod.daas.DAX_12136_Company_43_ML AS
		WITH prep AS 
		(  
		SELECT  
			 oc.company_id
			,oc.primary_domain 
			,oc.primary_name 
			,oc.street1 
			,oc.city
			,oc.state
			,oc.postal_code
			,oc.company_country
			,oc.digits
			,oc.primary_naics_code
			,n.industry
			,oc.linkedin_url
			,oc.employee_count
			,oc.revenue
			,oc.company_status
			,COUNT(DISTINCT CASE WHEN ptp.person_source = 'research' THEN ptp.person_id ELSE NULL END) AS HV_count
			,COUNT(DISTINCT CASE WHEN ptp.person_source = 'siq' THEN ptp.person_id ELSE NULL END) AS MV_count
		FROM
			 si_dataops_prod.daas.o_cds oc
		LEFT JOIN
			 si_dataops_prod.daas.master_naics_code_desc_05242024 n ON oc.primary_naics_code = n.naics
		LEFT JOIN
			 daas.person_top_positions_20250616_fixed_gr ptp ON oc.company_id = ptp.company_id
		WHERE 1=1
			 AND oc.employee_count > 600000
			 AND oc.company_status IN ('active', 'whitelist')
			 AND primary_domain NOT ILIKE 'walmart.%'
			 AND primary_domain NOT ILIKE 'Amazon.%'
			 AND primary_domain NOT ILIKE 'Defense.gov'
			 AND primary_domain NOT ILIKE 'Mcdonalds.%'
			 AND primary_domain NOT ILIKE 'Foxconn.%'
			 AND primary_domain NOT ILIKE 'Cnpc.%'
			 AND primary_domain NOT ILIKE 'Nhs.%'
			 AND primary_domain NOT ILIKE 'Mod.gov.in'
			 AND primary_domain NOT ILIKE 'Indianrail.gov.in'
			 AND primary_domain NOT ILIKE 'Chinamil.com.cn'
			 AND primary_domain NOT ILIKE 'Sgcc.com.cn'
			 AND primary_domain NOT ILIKE 'Education.gouv.fr'
			 AND primary_domain NOT ILIKE 'Tata.com'--!
			 AND primary_domain NOT ILIKE 'Usps.com'
			 AND primary_domain NOT ILIKE 'Sinopecgroup.com'
			 AND oc.primary_name NOT ILIKE 'amazon%'
			 AND oc.is_hq IS TRUE
			 AND oc.company_country = UPPER(oc.company_country)
		GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
		ORDER BY 2
		)
		SELECT DISTINCT
			 p.company_id
			,p.primary_domain 
			,p.primary_name
			,p.street1
			,p.city
			,p.state
			,p.postal_code
			,p.company_country
			,p.digits
			,p.primary_naics_code
			,p.industry
			,p.linkedin_url
			,p.employee_count
			,p.revenue
			,p.company_status 
			,p.HV_count
			,p.MV_count
		FROM prep p 
		;
		
		--
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		-- Data delivery for company-43
		
		SELECT DISTINCT * FROM si_dataops_prod.daas.DAX_12136_Company_43_ML ;
		
		-- 
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		-- Company 44  
		
		DROP TABLE si_dataops_prod.daas.DAX_12136_Company_44_ML ;
		
		-- 
		 
		CREATE TABLE si_dataops_prod.daas.DAX_12136_Company_44_ML AS 
		SELECT DISTINCT oc.*
		FROM si_dataops_prod.daas.o_cds oc 
		WHERE oc.company_status = 'inactive' 
		AND oc.company_id IN (SELECT DISTINCT company_id FROM si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML) 
		;  
		
		-- 
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		-- Data delivery for company-44
		
		SELECT DISTINCT * FROM si_dataops_prod.daas.DAX_12136_Company_44_ML  ;
		
		-- 
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		-- Company 45
		
		DROP TABLE si_dataops_prod.daas.DAX_12136_Company_45_ML ;
		
		--
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		--
		
		CREATE TABLE si_dataops_prod.daas.DAX_12136_Company_45_ML AS 
		SELECT DISTINCT oc.* 
		FROM si_dataops_prod.daas.o_cds oc 
		WHERE oc.company_status = 'active'
		AND oc.company_id IN (SELECT DISTINCT company_id FROM si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML) 
		; 
		
		--
		-------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
		-- Data delivery for company-45
		
		SELECT DISTINCT * FROM daas.DAX_12136_Company_45_ML ; 
		
		--
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		-- Company 46   
		
		DROP TABLE si_dataops_prod.daas.DAX_12136_Company_46_ML ;
		
		-- 
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		--
		
		CREATE TABLE si_dataops_prod.daas.DAX_12136_Company_46_ML AS 
		SELECT DISTINCT
			 oc.primary_domain AS `domain` 
			,oc.company_country AS countryCode   
			,oc.location_id AS locationId 
			,bc.linkedin_url AS Old_LI_URL 
			,oc.linkedin_url AS Current_LI_URL
			,TRUE AS Status 
		FROM
			 si_dataops_prod.daas.o_cds oc
		INNER JOIN 
			 si_dataops_prod.daas.DAX_12136_backup_cds_20250729_ML bc ON oc.company_id = bc.company_id
		WHERE
			 oc.company_status = 'whitelist'
			 AND REGEXP_REPLACE(oc.linkedin_url, '.*linkedin.com', '') != REGEXP_REPLACE(bc.linkedin_url, '.*linkedin.com', '')
		; 
		
		--
		--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
		-- Data for Company 46
		
		SELECT DISTINCT * FROM daas.DAX_12136_Company_46_ML ;
		
		--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--  Company 47 (Ingestion)

SELECT primary_domain AS domain, primary_name as name ,company_country as countryCode, company_status as status  
FROM daas.dax_12136_temp_20250728 WHERE
(
	primary_name ILIKE '%aquired by%' 
	OR REGEXP_LIKE(primary_name, '\\b(?i)doing business as\\b' )
	OR REGEXP_LIKE(primary_name, '\\b(?i)previously ?known ?as\\b' ) 
	OR REGEXP_LIKE(primary_name, '\\b(?i)previous|known ?as|formerly|aquisition ? of|an ?aquisition ?of|owned ?by|merged ?with|aquired ?by|joined|formerly known ?as|previously ?known ?as|renamed? ?to|transitioned ?to|changed ?name ?to|trading as|closed|permanently closed|shut ?down\\b' )                    
	OR REGEXP_LIKE(primary_name, '(i?)\\bdba\\b' )  
	) 
AND LOWER(TRIM((SPLIT_PART(primary_domain , '.', 1)))) <> LOWER(TRIM(primary_name))
;

--
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--  Company 47 ( QA ) 

SELECT * EXCEPT(RN) FROM
(
	SELECT * EXCEPT(naics_number, keywords_number,founder_count, president_count, ceo_presence_flag, naics_presence_flag ), ROW_NUMBER()OVER(PARTITION BY company_id ORDER BY CASE WHEN LENGTH(digits) = 10 THEN 0 ELSE 1 END, LENGTH(digits) DESC) AS RN 
	FROM daas.dax_12136_temp_20250728 WHERE 
	(
		primary_name ILIKE '%aquired by%' 
		OR REGEXP_LIKE(primary_name, '\\b(?i)doing business as\\b' )
		OR REGEXP_LIKE(primary_name, '\\b(?i)previously ?known ?as\\b' ) 
		OR REGEXP_LIKE(primary_name, '\\b(?i)previous|known ?as|formerly|aquisition ? of|an ?aquisition ?of|owned ?by|merged ?with|aquired ?by|joined|formerly known ?as|previously ?known ?as|renamed? ?to|transitioned ?to|changed ?name ?to|trading as|closed|permanently closed|shut ?down\\b' )                    
		OR REGEXP_LIKE(primary_name, '(i?)\\bdba\\b' )  
		) 
	AND LOWER(TRIM((SPLIT_PART(primary_domain , '.', 1)))) <> LOWER(TRIM(primary_name))
) AS subquerry
;

-- 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--










